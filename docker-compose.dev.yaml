---
version: "2.1"
services:
  postgres:
    container_name: duty_database
    image: registry.hub.docker.com/library/postgres:13.3-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=mysecretpassword
    volumes:
      - ./.data/dev-postgres-db:/var/lib/postgresql/data

  frontend:
    container_name: duty_frontend
    image: registry.hub.docker.com/library/node:18-slim
    ports:
      - 8080:8080
    environment:
      - NODE_ENV=development
    volumes:
      - ./duty_board/www:/code
    working_dir: /code
    command: /bin/bash -c "npm install && npm run dev2"

  backend:
    depends_on:
      - postgres
    container_name: duty_backend
    image: registry.hub.docker.com/library/python:3.10-slim
    ports:
      - 8000:8000
    links:
      - "postgres:database_container"
    environment:
      - NODE_ENV=development
      - SQL_ALCHEMY_CONNECTION=postgresql://postgres:mysecretpassword@database_container:5432/postgres
      - DUTY_BOARD_SECRET_KEY=RANDOM_SECRET_KEY
      - CREATE_DUMMY_RECORDS=1
    volumes:
      - ./:/code
      - ./.data/docker_venv:/venv
      # Prevent docker_venv from being synced into the container twice; https://stackoverflow.com/a/37898591/2277445
      - /code/docker_venv
      - /code/docker_prod_venv
      - /code/duty_board/www/node_modules
    working_dir: /code
    command: /bin/bash -c "python3 -m venv /venv && source /venv/bin/activate && pip3 install --upgrade pip && pip3 install -e . && alembic upgrade head && uvicorn duty_board.server:app --host 0.0.0.0 --port 8000 --reload"


# Use the following query to list all users;
# ldapsearch -H ldap://localhost:1389 -D 'cn=admin,dc=DutyBoard,dc=com' -w 'adminpassword' -s 'one' -b 'ou=People,dc=DutyBoard,dc=com'
# Use the following query to list all members of group;
# ldapsearch -x -H ldap://localhost:1389 -D 'cn=admin,dc=DutyBoard,dc=com' -w 'adminpassword' -b "cn=readers,ou=Groups,dc=DutyBoard,dc=com"
# or;
# ldapsearch -H ldap://localhost:1389 -D 'cn=admin,dc=DutyBoard,dc=com' -w 'adminpassword' -b "ou=Groups,dc=DutyBoard,dc=com" "(cn=readers)" member
# And for groupOfUniqueNames
# ldapsearch -H ldap://localhost:1389 -D 'cn=admin,dc=DutyBoard,dc=com' -w 'adminpassword' -b "ou=Groups,dc=DutyBoard,dc=com" "(cn=uniqueReaders)" uniquemember

  openldap:
    image: docker.io/bitnami/openldap:2.6
    container_name: openldap
    ports:
      - '1389:1389'
      - '1636:1636'
    environment:
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=adminpassword
      - LDAP_ROOT=dc=DutyBoard,dc=com
      - BITNAMI_DEBUG=true
      - LDAP_CUSTOM_LDIF_DIR=/bitnami/openldap_ldifs
    volumes:
      - ./tests/data/openldap_ldifs:/bitnami/openldap_ldifs
      - ./.data/openldap_data:/bitnami/openldap
